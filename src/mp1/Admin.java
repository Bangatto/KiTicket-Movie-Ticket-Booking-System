/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mp1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author parth
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        AdL = new javax.swing.JLabel();
        BaM = new javax.swing.JRadioButton();
        AaM = new javax.swing.JRadioButton();
        RaM = new javax.swing.JRadioButton();
        AdSubmitB = new javax.swing.JButton();
        EaM = new javax.swing.JRadioButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin");

        AdL.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        AdL.setForeground(new java.awt.Color(255, 0, 0));
        AdL.setText("Hello Admin, What would you like to do?");

        buttonGroup1.add(BaM);
        BaM.setText("Book a Movie");

        buttonGroup1.add(AaM);
        AaM.setText("Add a Movie");

        buttonGroup1.add(RaM);
        RaM.setText("Remove a Movie");
        RaM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RaMActionPerformed(evt);
            }
        });

        AdSubmitB.setText("Submit");
        AdSubmitB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdSubmitBActionPerformed(evt);
            }
        });

        buttonGroup1.add(EaM);
        EaM.setText("Edit a Movie");
        EaM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EaMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EaM)
                    .addComponent(RaM)
                    .addComponent(AaM)
                    .addComponent(BaM)
                    .addComponent(AdL)
                    .addComponent(AdSubmitB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AdL)
                .addGap(36, 36, 36)
                .addComponent(BaM)
                .addGap(18, 18, 18)
                .addComponent(AaM)
                .addGap(18, 18, 18)
                .addComponent(RaM)
                .addGap(11, 11, 11)
                .addComponent(EaM)
                .addGap(18, 18, 18)
                .addComponent(AdSubmitB)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void RaMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RaMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RaMActionPerformed

    private void AdSubmitBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdSubmitBActionPerformed
        // TODO add your handling code here:
        if(BaM.isSelected()){
            Movies m=new Movies();
            m.setVisible(true);
        }
        else if(AaM.isSelected()){
            JTextField movie=new JTextField();
            JTextField path=new JTextField();
            JTextField description=new JTextField();
            JTextField mcast=new JTextField();
            Object[] fields={"Movie Name : ",movie,"Path : ",path,"Movie Description : ",description,"Movie Cast : ",mcast};
        JOptionPane.showConfirmDialog(null,fields,"Add a Movie",JOptionPane.OK_CANCEL_OPTION);
        String strNAME=movie.getText();
        String strPATH=path.getText();
        String strDESCRIPTION=description.getText();
        String strMCAST=mcast.getText();
        //int str = JOptionPane.showConfirmDialog(null,fields,"Enter Required Fields",JOptionPane.OK_CANCEL_OPTION);
        String host = "jdbc:derby://localhost:1527/Users";
        SignUP su=new SignUP();
        String uName = "username";
        String uPass= "password";
    
     try {
            Connection con;
      con = DriverManager.getConnection( host,uName,uPass);
      Statement stmt = con.createStatement();
      //String SQL = "SELECT * FROM Data";
      
      //Statement stmt = con.createStatement();
        String SQL = "SELECT * FROM MOVIENAMES ";
       
            try {
                 ResultSet rs=stmt.executeQuery(SQL);
                while(rs.next())
                {
                    
                }     } catch (SQLException ex) {
                Logger.getLogger(SignUP.class.getName()).log(Level.SEVERE, null, ex);
                
            }
      String Cmd = "INSERT INTO MOVIENAMES (NAME,PATH,DESCRIPTION,MCAST) values ('"+strNAME+"','"+strPATH+"','"+strDESCRIPTION+"','"+strMCAST+"')";
      JOptionPane.showMessageDialog(su,"Success...");
      dispose();
                try {
                    stmt.executeUpdate(Cmd);
                    //while(rs.next())
                    //{
                    /*String id=rs.getString("Username");
                    String user=rs.getString("Contact");
                    String pswd=rs.getString("Password");*/
                    //System.out.println("Email/PhoneNo: "+user+" Password: "+pswd);
                    
                    //  }
                } catch (SQLException ex) {
                    Logger.getLogger(SignUP.class.getName()).log(Level.SEVERE, null, ex);
                }
        }catch(Exception e){
                
        }
        }
        else if(RaM.isSelected()){
            try {
                String host = "jdbc:derby://localhost:1527/Users";
                String uName = "username";
                String uPass= "password";
                Admin ad=new Admin();
                String RmName= JOptionPane.showInputDialog(ad,"Enter a movie name is to be removed");
                Connection con;
                con = DriverManager.getConnection( host,uName,uPass);
                Statement stmt = con.createStatement();
                String SQL = "SELECT * FROM MOVIENAMES ";
                try {
                    ResultSet rs=stmt.executeQuery(SQL);
                    while(rs.next()){}
                }catch(SQLException ex){
                    Logger.getLogger(SignUP.class.getName()).log(Level.SEVERE, null, ex);
                }
                String cmd= "DELETE FROM MOVIENAMES WHERE NAME='"+RmName+"'";
                try {
                    stmt.executeUpdate(cmd);
                } catch (SQLException ex) {
                    Logger.getLogger(SignUP.class.getName()).log(Level.SEVERE, null, ex);
                }
            }catch(SQLException ex){
                Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(EaM.isSelected()){
            try {
                String host = "jdbc:derby://localhost:1527/Users";
                String uName = "username";
                String uPass= "password";
                Admin ad=new Admin();
                JTextField movie=new JTextField();
            JTextField path=new JTextField();
            JTextField description=new JTextField();
            JTextField mcast=new JTextField();
            String EmName= JOptionPane.showInputDialog(ad,"Enter a movie name is to be Edited");
            Object[] fields={"Movie Name : ",movie,"Path : ",path,"Movie Description : ",description,"Movie Cast : ",mcast};
        JOptionPane.showConfirmDialog(ad,fields,"Edit a Movie Details",JOptionPane.OK_CANCEL_OPTION);
        String Mname=movie.getText();
        String Mpath=path.getText();
        String Mdescription=description.getText();
        String Mmcast=mcast.getText();
                
                Connection con;
                con = DriverManager.getConnection( host,uName,uPass);
                Statement stmt = con.createStatement();
                String SQL = "SELECT * FROM MOVIENAMES ";
                try {
                    ResultSet rs=stmt.executeQuery(SQL);
                    while(rs.next()){}
                }catch(SQLException ex){
                    Logger.getLogger(SignUP.class.getName()).log(Level.SEVERE, null, ex);
                }
                String cmd= "UPDATE MOVIENAMES SET NAME='"+Mname+"', PATH='"+Mpath+"', DESCRIPTION='"+Mdescription+"',MCAST='"+Mmcast+"' WHERE NAME='"+EmName+"'";
                try {
                    stmt.executeUpdate(cmd);
                } catch (SQLException ex) {
                    Logger.getLogger(SignUP.class.getName()).log(Level.SEVERE, null, ex);
                }
            }catch(SQLException ex){
                Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            Admin ad= new Admin();
            JOptionPane.showConfirmDialog(ad,"Please select atleast one option","",JOptionPane.DEFAULT_OPTION,JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_AdSubmitBActionPerformed

    private void EaMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EaMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EaMActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AaM;
    private javax.swing.JLabel AdL;
    private javax.swing.JButton AdSubmitB;
    private javax.swing.JRadioButton BaM;
    private javax.swing.JRadioButton EaM;
    private javax.swing.JRadioButton RaM;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
